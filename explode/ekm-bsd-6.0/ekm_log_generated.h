/* This file is automatically generated by gen_ekm_log */ 

#ifndef __EKM_LOG_GENERATED_H
#define __EKM_LOG_GENERATED_H
#ifndef __KERNEL__
//#		include <sys/types.h>
//#		include <unistd.h>
#//		include <linux/unistd.h>
#endif
#define EKM_BH_dirty    (1|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_clean    (2|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_lock    (3|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_wait    (4|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_unlock    (5|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_write    (6|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_write_sync    (7|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_hash    (8|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_reiser_dirty    (9|(EKM_BH_CAT<<EKM_CAT_SHIFT))
#define EKM_BH_done    (10|(EKM_BH_CAT<<EKM_CAT_SHIFT))

#define EKM_BIO_start_write    (1|(EKM_BIO_CAT<<EKM_CAT_SHIFT))
#define EKM_BIO_wait    (2|(EKM_BIO_CAT<<EKM_CAT_SHIFT))

#define EKM_BIO_write    (3|(EKM_BIO_CAT<<EKM_CAT_SHIFT))
#define EKM_BIO_read    (4|(EKM_BIO_CAT<<EKM_CAT_SHIFT))
#define EKM_BIO_write_done    (5|(EKM_BIO_CAT<<EKM_CAT_SHIFT))

#define EKM_SYSCALL_sys_fdatasync    (1|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_fdatasync_res    (2|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_fsync    (3|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_fsync_res    (4|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_rename    (5|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_rename_res    (6|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_truncate    (7|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_truncate_res    (8|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_llseek    (9|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_llseek_res    (10|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_rmdir    (11|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_rmdir_res    (12|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_symlink    (13|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_symlink_res    (14|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_sync    (15|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_sync_res    (16|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_open    (17|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_open_res    (18|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_write    (19|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_write_res    (20|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_unlink    (21|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_unlink_res    (22|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_close    (23|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_close_res    (24|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_pwrite64    (25|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_pwrite64_res    (26|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_lseek    (27|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_lseek_res    (28|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_mkdir    (29|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_mkdir_res    (30|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_read    (31|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_read_res    (32|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_link    (33|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_link_res    (34|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_ftruncate    (35|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
#define EKM_SYSCALL_sys_ftruncate_res    (36|(EKM_SYSCALL_CAT<<EKM_CAT_SHIFT))
/*void ekm_sys_fdatasync(int *lsn, unsigned int fd);
void ekm_sys_fdatasync_res(int before_lsn, long ret, unsigned int fd);
void ekm_sys_fsync(int *lsn, unsigned int fd);
void ekm_sys_fsync_res(int before_lsn, long ret, unsigned int fd);
void ekm_sys_rename(int *lsn, const char __user *oldname, const char __user *newname);
void ekm_sys_rename_res(int before_lsn, long ret, const char __user *oldname, const char __user *newname);
void ekm_sys_truncate(int *lsn, const char __user *filename, unsigned long length);
void ekm_sys_truncate_res(int before_lsn, long ret, const char __user *filename, unsigned long length);
void ekm_sys_llseek(int *lsn, unsigned int fd, unsigned long offset_high, unsigned long offset_low, loff_t __user * result, unsigned int origin);
void ekm_sys_llseek_res(int before_lsn, long ret, unsigned int fd, unsigned long offset_high, unsigned long offset_low, loff_t __user * result, unsigned int origin);
void ekm_sys_rmdir(int *lsn, const char __user * pathname);
void ekm_sys_rmdir_res(int before_lsn, long ret, const char __user * pathname);
void ekm_sys_symlink(int *lsn, const char __user *oldname, const char __user *newname);
void ekm_sys_symlink_res(int before_lsn, long ret, const char __user *oldname, const char __user *newname);
void ekm_sys_sync(int *lsn);
void ekm_sys_sync_res(int before_lsn, long ret);
void ekm_sys_open(int *lsn, const char __user *filename, int flags, int mode);
void ekm_sys_open_res(int before_lsn, long ret, const char __user *filename, int flags, int mode);
void ekm_sys_write(int *lsn, unsigned int fd, const char __user *buf, size_t count);
void ekm_sys_write_res(int before_lsn, ssize_t ret, unsigned int fd, const char __user *buf, size_t count);
void ekm_sys_unlink(int *lsn, const char __user *pathname);
void ekm_sys_unlink_res(int before_lsn, long ret, const char __user *pathname);
void ekm_sys_close(int *lsn, unsigned int fd);
void ekm_sys_close_res(int before_lsn, long ret, unsigned int fd);
void ekm_sys_pwrite64(int *lsn, unsigned int fd, const char __user *buf, size_t count, loff_t pos);
void ekm_sys_pwrite64_res(int before_lsn, ssize_t ret, unsigned int fd, const char __user *buf, size_t count, loff_t pos);
void ekm_sys_lseek(int *lsn, unsigned int fd, off_t offset, unsigned int origin);
void ekm_sys_lseek_res(int before_lsn, off_t ret, unsigned int fd, off_t offset, unsigned int origin);
void ekm_sys_mkdir(int *lsn, const char __user * pathname, int mode);
void ekm_sys_mkdir_res(int before_lsn, long ret, const char __user * pathname, int mode);
void ekm_sys_read(int *lsn, unsigned int fd, char __user *buf, size_t count);
void ekm_sys_read_res(int before_lsn, ssize_t ret, unsigned int fd, char __user *buf, size_t count);
void ekm_sys_link(int *lsn, const char __user *oldname, const char __user *newname);
void ekm_sys_link_res(int before_lsn, long ret, const char __user *oldname, const char __user *newname);
void ekm_sys_ftruncate(int *lsn, unsigned int fd, unsigned long length);
void ekm_sys_ftruncate_res(int before_lsn, long ret, unsigned int fd, unsigned long length);*/
#endif
